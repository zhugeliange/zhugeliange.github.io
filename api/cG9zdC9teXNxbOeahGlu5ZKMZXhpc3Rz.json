{"title":"mysql的in和exists","date":"2017-09-05T07:51:04.000Z","slug":"mysql的in和exists","comments":true,"tags":["exists","in","mysql"],"categories":["mysql"],"updated":"2019-04-04T07:51:04.000Z","content":"<html><head></head><body><h2 id=\"EXISTS\"><a href=\"#EXISTS\" class=\"headerlink\" title=\"EXISTS\"></a><strong>EXISTS</strong></h2><ul><li><strong>EXISTS</strong> 对外表用 <strong>LOOP</strong> 逐条循环查询，每次查询都会查看 <strong>EXISTS</strong> 的条件语句，当 <strong>EXISTS</strong> 里的条件语句能够返回记录时(无论记录是多少条，只要能返回)，条件就为真，返回当前 <strong>LOOP</strong> 到的这条记录，反之如果 <strong>EXISTS</strong> 里的条件语句不能返回记录行，则当前 <strong>LOOP</strong> 到的这条记录被丢弃，<strong>EXISTS</strong> 里的语句就像一个 <strong>WHERE</strong> 条件，当能返回结果时为 <strong>TRUE</strong>否则为 <strong>FALSE</strong>。</li></ul><h2 id=\"IN\"><a href=\"#IN\" class=\"headerlink\" title=\"IN\"></a><strong>IN</strong></h2><ul><li><p><strong>IN</strong> 相当于多个 <strong>OR</strong> 条件的叠加。</p></li><li><p>但是 <strong>IN</strong> 的条件只支持一个字段，而 <strong>EXISTS</strong> 则没有限制。</p></li></ul><h2 id=\"性能比较\"><a href=\"#性能比较\" class=\"headerlink\" title=\"性能比较\"></a>性能比较</h2><ul><li><strong>EXISTS</strong></li></ul><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">1</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">EXISTS</span> (<span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">2</span> <span class=\"keyword\">WHERE</span> 表<span class=\"number\">2.</span><span class=\"keyword\">id</span> = 表<span class=\"number\">1.</span><span class=\"keyword\">id</span>); <span class=\"comment\"># 查询主要是用到了表2的索引，表1对查询的效率影响不大。</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>IN</strong></li></ul><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">1</span> <span class=\"keyword\">WHERE</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span> <span class=\"keyword\">FROM</span> 表<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设这里表2的所有id为 1，2，3 则上面语句可以转化成</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">1</span> <span class=\"keyword\">WHERE</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> = <span class=\"number\">1</span> <span class=\"keyword\">OR</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> = <span class=\"number\">2</span> <span class=\"keyword\">OR</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> = <span class=\"number\">3</span>; <span class=\"comment\"># 查询主要是用到了表1的索引，表2对查询的效率影响不大。</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>NOT EXISTS</strong></li></ul><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">1</span> <span class=\"keyword\">WHERE</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">EXISTS</span> (<span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">2</span> <span class=\"keyword\">WHERE</span> 表<span class=\"number\">2.</span><span class=\"keyword\">id</span> = 表<span class=\"number\">1.</span><span class=\"keyword\">id</span>); <span class=\"comment\"># 查询主要是用到了表2的索引，表1对查询的效率影响不大。</span></span><br></pre></td></tr></tbody></table></figure><ul><li><strong>NOT IN</strong></li></ul><figure class=\"highlight sql\"><table><tbody><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">1</span> <span class=\"keyword\">WHERE</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> <span class=\"keyword\">id</span> <span class=\"keyword\">FROM</span> 表<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 假设这里表2的所有id为 1，2，3 则上面语句可以转化成</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> * <span class=\"keyword\">FROM</span> 表<span class=\"number\">1</span> <span class=\"keyword\">WHERE</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> != <span class=\"number\">1</span> <span class=\"keyword\">OR</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> != <span class=\"number\">2</span> <span class=\"keyword\">OR</span> 表<span class=\"number\">1.</span><span class=\"keyword\">id</span> != <span class=\"number\">3</span>; <span class=\"comment\"># 因为 != 不会走索引，所以效率很差</span></span><br></pre></td></tr></tbody></table></figure><ul><li><p><strong>IN</strong> 语句是把外表和内表作 <strong>HASH</strong> 连接，而 <strong>EXISTS</strong> 语句是对外表作 <strong>LOOP</strong> 循环，再对内表进行查询。所以得出结论：</p><ul><li><p>内外表大小差不多，用 <strong>IN</strong> 和 <strong>EXISTS</strong> 都行。</p></li><li><p>内表大用 <strong>EXISTS</strong>，外表大用 <strong>IN</strong>。</p></li><li><p>无论什么情况 <strong>NOT EXISTS</strong> 都比 <strong>NOT IN</strong> 效率高，因为前者走索引后者没有。</p></li></ul></li></ul></body></html>","prev":{"title":"mysql模糊查询","slug":"mysql模糊查询"},"next":{"title":"mysql的with-rollup和coalesce函数配合group-by实现分组之后汇总","slug":"mysql的with-rollup和coalesce函数配合group-by实现分组之后汇总"},"link":"/post/mysql的in和exists/","toc":[{"title":"","id":"性能比较","index":"1"}],"reward":true,"copyright":{"license":"原创版权，转载请注明来源 (<a href=\\\"https://creativecommons.org/licenses/by-nc-sa/4.0/\\\" rel=\\\"external nofollow noopener\\\" target=\\\"_blank\\\">CC BY-NC-ND 4.0</a>)","author":"沈捷译","link":"<a href=\"/post/mysql的in和exists/\" title=\"mysql的in和exists\">/post/mysql的in和exists/</a>"}}